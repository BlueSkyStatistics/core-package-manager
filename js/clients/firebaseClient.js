const axios = require('axios')
var { initializeApp } = require("firebase/app");
var { getStorage, ref, getDownloadURL } = require("firebase/storage");
var { getFirestore, collection, where, query, getDocs } = require("firebase/firestore"); 
const {writeFileSync} = require('original-fs')
const {normalize} = require("path")


class firebaseStoreClient{
    constructor(firebaseConfig, bucket){
        // Initialize Firebase
        this.app = initializeApp(firebaseConfig);
        // Initialize Cloud Storage and get a reference to the service
        this.storage = getStorage(this.app, bucket);
        this.db = getFirestore(this.app);
    }
    
    // Firebase rule: match /public/{moduleType}/{dialogsType}/{version}/{itemId} {allow read: if true;}
    // ReturnStructure: none, save file from fireBase Store into storeLocation
    async downloadFile(filePath, storeLocation) {
        var pathReference = ref(this.storage, filePath);
        console.log(pathReference)
        var url = await getDownloadURL(pathReference);
        console.log(url)
        var response = await axios.get(url, {responseType: "blob"})
        writeFileSync(normalize(storeLocation), Buffer.from(response.data))
    }

    // structure of modulesVersions
    // id: autogenerated
    // name: string
    // version: strings
    // file: string
    // Firebase rule: match /modulesVersions {allow read: if true;}
    // ReturnStructure: [{name: string, version: string, filename: string}]
    async getPackageVersions(moduleName){
        const q = query(collection(this.db, "modulesVersions"), where("name", "==", moduleName));
        var results = await getDocs(q);
        var versions = []
        results.forEach(result => {
            versions.push({
                name: result.data().name,
                version: result.data().version,
                filename: result.data().filename
            })
        })
        return versions
    }
}

// var firebaseClient = new firebaseStoreClient(firebaseConfig, "gs://blueskystatistics-4ad1f.appspot.com")
// firebaseClient.downloadFile('public/dialogs/elementslib/1.1.7/elementslib.asar', "some.asar").then(() => { console.log("dome") })
// firebaseClient.getPackageVersions("elementslib").then((result) => {console.log(result)})